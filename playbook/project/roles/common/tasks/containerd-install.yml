---
- name: Download containerd
  ansible.builtin.get_url:
    url: "{{ packages.containerd.url }}"
    dest: /tmp/containerd-linux-amd64.tar.gz
    checksum: "{{ packages.containerd.sha256 }}"
  register: download
  until: download is succeeded
  retries: 5
  delay: 10

- name: Extract containerd
  ansible.builtin.unarchive:
    remote_src: true
    src: /tmp/containerd-linux-amd64.tar.gz
    dest: /usr/local

- name: Remove containerd tar
  ansible.builtin.file:
    path: /tmp/containerd-linux-amd64.tar.gz
    state: absent

- name: Create containerd directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Create default containerd config
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml

- name: Set cgroup driver for containerd
  ansible.builtin.command: sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml

- name: Set sandbox img for containerd
  ansible.builtin.command: sed -i 's/  sandbox_image = .*/  sandbox_image = "registry.k8s.io\/pause:3.2"/' /etc/containerd/config.toml

- name: Download containerd unit file
  ansible.builtin.get_url:
    url: "{{ packages.containerd.unit }}"
    dest: /usr/lib/systemd/system/containerd.service

- name: Start containerd
  ansible.builtin.systemd:
    name: containerd
    daemon_reload: true
    state: started
    enabled: true
