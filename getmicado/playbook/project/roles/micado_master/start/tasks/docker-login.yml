---
- name: (Docker login) Checking the existence of Docker credentials
  stat: path={{ docker_cred_path }}
  delegate_to: localhost
  register: f
  changed_when: False

- name: (Docker login) Get Docker credentials
  include_vars: "{{ docker_cred_path }}"
  when: f.stat.exists

- name: (Docker login) Store Docker Registry Key
  command: kubectl create secret docker-registry dockerloginkey
        --docker-server={{ DOCKER_REPO }}
        --docker-username={{ DOCKER_USER }}
        --docker-password={{ DOCKER_PASS }}
  when: f.stat.exists

- name: (Docker login) Update Service Account with Registry Key
  command: "kubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"dockerloginkey\"}]}'"
  when: f.stat.exists