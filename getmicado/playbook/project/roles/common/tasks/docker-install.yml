---
- name: '(Docker) Installing dependencies'
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    state: present
  when: ansible_distribution == "Ubuntu"

- name: '(Docker) Adding APT key'
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present
  when: ansible_distribution == "Ubuntu"

- name: '(Docker) Adding APT repository (x86)'
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_distribution == "Ubuntu" and ansible_architecture not in ["aarch64", "arm64"]

- name: '(Docker) Adding APT repository (ARM)'
  apt_repository:
    repo: "deb [arch=arm64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_distribution == "Ubuntu" and ansible_architecture in ["aarch64", "arm64"]

- name: '(Docker) Installing APT package'
  apt:
    name:
    - "{{ packages.docker_ce }}"
    - "{{ packages.docker_ce_cli }}"
    - "{{ packages.containerd_io }}"
    state: present
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: '(Docker) Installing via convenience script (Raspbian)'
  script: docker/get.sh
  when: ansible_lsb.id == "Raspbian"

- name: '(Docker) prevent package from being upgraded'
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
